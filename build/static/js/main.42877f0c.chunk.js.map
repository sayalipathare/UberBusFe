{"version":3,"sources":["config/config.js","utils/auth.js","pages/Home.js","pages/Uber/AllBookings.js","pages/Booking/Booking.js","pages/PageNotFound.js","components/Appbar.js","App.js","serviceWorker.js","index.js"],"names":["config","auth","isAuthenticated","Storage","JSON","parse","localStorage","getItem","isAuthorised","ex","getData","getAuth","signInURL","withStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","marginTop","props","classes","className","useStyles","makeStyles","width","paddingTop","media","height","card","flexGrow","padding","spacing","THome","StyleSheet","create","container","centering","alignItems","React","useState","tweets","setTweets","setLoading","useEffect","a","fetch","res","json","results","console","log","fetchData","Grid","direction","justify","map","link","item","xs","sm","md","Card","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","user","source","destination","date","marginLeft","marginRight","breakpoints","up","avatar","margin","color","secondary","main","form","submit","flexDirection","Compose","useHistory","username","setUsername","setSource","setDestination","setDate","helperuser","setHelperuser","helpersource","setHelpersource","helperdestination","setHelperdestination","error","setError","errorText","setErrorText","errorusername","setErrorusername","errorsource","setErrorsource","errordestination","setErrordestination","postTweet","pic","paramdict","method","headers","Accept","body","stringify","response","ok","alert","data","Fragment","Paper","elevation","onSubmit","event","preventDefault","myArray","img_url","Math","floor","random","length","toString","TextField","value","onInput","target","required","fullWidth","id","label","name","autoComplete","autoFocus","helperText","style","float","paddingLeft","FormControl","formControl","InputLabel","Select","labelId","onChange","MenuItem","FormHelperText","type","e","defaultValue","inputProps","min","d","Date","month","getMonth","day","getDate","year","getFullYear","join","formatDate","InputLabelProps","shrink","Button","PageNotFound","to","history","createBrowserHistory","toolbar","paddingRight","toolbarIcon","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","drawerPaperCollapsed","appBarSpacer","content","paddingBottom","fixedHeight","footer","left","bottom","textAlign","fontStyle","Dashboard","open","setOpen","collapsed","setCollapsed","setTitle","handleDrawerCollapsed","onItemClick","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Drawer","Divider","List","ListItem","button","Link","ListItemIcon","ListItemText","primary","exact","path","Home","App","_config","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42877f0c.chunk.js","sourcesContent":["import React, { lazy } from 'react'\nimport { isAuthorised } from '../utils/auth'\nimport { getAuth } from '../utils/auth'\n\nconst config = {\n  auth: {\n    isAuthenticated: isAuthorised,\n    getData: () => {\n      return getAuth()\n    },\n    signInURL: '/signin',\n  },\n}\n\nexport default config\n","const localStorageAuthKey = 'fwo:auth'\nexport function saveAuthorisation(user) {\n    if (typeof Storage !== 'undefined') {\n        try {\n            user.isAuthorised = true;\n            localStorage.setItem(localStorageAuthKey, JSON.stringify(user))\n        } catch (ex) {\n            console.log(ex)\n        }\n    } else {\n        // No web storage Support.\n    }\n}\n\nexport function logout() {\n    if (typeof Storage !== 'undefined') {\n        try {\n            const auth = JSON.parse(localStorage.getItem(localStorageAuthKey))\n            auth.isAuthorised = false;\n            auth.displayName = '';\n            localStorage.setItem(localStorageAuthKey, JSON.stringify(auth))\n        } catch (ex) {\n            console.log(ex)\n        }\n    } else {\n        // No web storage Support.\n    }\n}\n\nexport function getAuth() {\n    try {\n        if (typeof Storage !== 'undefined') {\n            const auth = JSON.parse(localStorage.getItem(localStorageAuthKey))\n            if (auth === null) { auth = {}; auth.isAuthorised = false }\n            return auth;\n        } else {\n            return false\n        }\n    } catch (ex) {\n        return false\n    }\n}\n\nexport function isAuthorised() {\n    try {\n        if (typeof Storage !== 'undefined') {\n            const auth = JSON.parse(localStorage.getItem(localStorageAuthKey))\n            return auth.isAuthorised || false;\n        } else {\n            return false\n        }\n    } catch (ex) {\n        return false\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    marginTop: '100px'\n  }\n});\n\nfunction Home(props) {\n  const { classes } = props;\n\n  return (\n      <div className={classes.root}>\n        <h1>Landing page</h1>\n      </div>\n  );\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);\n","import React, { useState, useEffect } from \"react\";\nimport { ScrollView, StyleSheet, ActivityIndicator } from \"react-native\";\n// import TweetList from \"./TweetList\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core/\";\n//import axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width:350,\n    // maxWidth: 500,\n    paddingTop:40\n  },\n  media: {\n    height: 140,\n    paddingTop:300\n  },\n  card: {\n    flexGrow: 1,\n    padding: theme.spacing(2)\n}\n}));\n\nconst THome = () => {\n  const classes = useStyles();\n  const [tweets, setTweets] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(\"http://34.194.238.35:5000/bookings-results\");\n      const { results } = await res.json();\n      console.log(results);\n      setTweets([...results]);\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    // <ScrollView noSpacer={true} noScroll={true} style={styles.container}>\n    //   {loading ? (\n    //     <ActivityIndicator\n    //       style={[styles.centering]}\n    //       color=\"#ff8179\"\n    //       size=\"large\"\n    //     />\n    //   ) : (\n        // <TweetList tweets={tweets} />\n        <div className={classes.card}>\n        <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n        >\n            {\n        tweets.map((link) => (\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.root}>\n              <CardMedia\n                className={classes.media}\n                image={\n                  \"https://assets.bwbx.io/images/users/iqjWHBFdfxIU/ieN2q3c75kbM/v0/1000x-1.jpg\"\n                }\n                title=\"UBER BUS\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {link.user}\n                </Typography>\n                <Typography gutterBottom variant=\"h6\" component=\"h6\">\n                  Source : {link.source}\n                </Typography>\n                <Typography gutterBottom variant=\"h6\" component=\"h6\">\n                  Destination : {link.destination}\n                </Typography>\n                <Typography gutterBottom variant=\"h6\" component=\"h6\">\n                  Date of Journey : {link.date}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n        </Grid>\n    </div>\n      \n    //   )}\n    // </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"whitesmoke\",\n    marginTop: \"60px\",\n  },\n  centering: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 8,\n    height: \"100vh\",\n  },\n});\n\nexport default THome;\n","import { useHistory } from \"react-router-dom\";\nimport { saveAuthorisation, isAuthorised } from \"../../utils/auth\";\n//import Page from 'material-ui-shell/lib/containers/Page/Page'\nimport React, { useState, useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n//import Button from '@material-ui/Button'\nimport Paper from \"@material-ui/core/Paper\";\n//import MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\nimport { Link } from \"react-router-dom\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { DatePicker } from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: \"auto\",\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(720 + theme.spacing(6))]: {\n      width: 900,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    width: 192,\n    height: 192,\n    color: theme.palette.secondary.main,\n  },\n  form: {\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: `100%`,\n  },\n}));\n\nconst Compose = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [tweet, setTweet] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [source, setSource] = useState(\"Source\");\n  const [destination, setDestination] = useState(\"Destination\");\n  const [date, setDate] = useState(\"\");\n  const [helperuser, setHelperuser] = useState(\"\");\n  const [helpersource, setHelpersource] = useState(\"\");\n  const [helperdestination, setHelperdestination] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState(\"\");\n  const [errorusername, setErrorusername] = useState(false);\n  const [errorsource, setErrorsource] = useState(false);\n  const [errordestination, setErrordestination] = useState(false);\n\n  // async launch POST\n  const postTweet = async (user, source, destination, date, pic) => {\n    const paramdict = {\n      user: user,\n      source:source,\n      destination:destination,\n      date:date,\n      pic: pic,\n    };\n\n    try {\n      const config = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(paramdict),\n      };\n      const response = await fetch(\"http://34.194.238.35:5000/book\", config);\n      //const json = await response.json()\n      if (response.ok) {\n        //return json\n        //return response\n        \n        console.log(\"success on send.\");\n      } else {\n        alert(\"launch: failure on send!\");\n      }\n\n      try {\n        const data = await response.json();\n        console.log(\"on reply:\");\n        if(data['msg']==\"Same Booking Already Present\"){\n          setError(true);\n          setErrorText(\"Same Booking Already Present\");\n        }else{\n          setError(true);\n          setErrorText(\"Booking Successful\");\n        }\n        console.log(data);\n      } catch (err) {\n        console.log(err);\n        alert(\"exception on reply!\");\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"exception on send\");\n    }\n  };\n\n  const handleUsername = (event) => {\n    if (event.target.value == \"\") {\n      setErrorusername(true);\n      setHelperuser(\"Please enter username\");\n    } else {\n      setErrorusername(false);\n      setHelperuser(\"\");\n    }\n    setUsername(event.target.value);\n  };\n  const handleSource = (event) => {\n    if (event.target.value == \"\") {\n      setErrorsource(true);\n      setHelpersource(\"Please select the origin\");\n    } else {\n      setErrorsource(false);\n      setHelpersource(\"\");\n    }\n    setSource(event.target.value);\n  };\n  const handleDestination = (event) => {\n    if (event.target.value == \"\") {\n      setErrordestination(true);\n      setHelperdestination(\"Please select the destination\");\n    } else {\n      setErrordestination(false);\n      setHelperdestination(\"\");\n    }\n    setDestination(event.target.value);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"insubmit\");\n    console.log(source);\n    console.log(destination);\n    console.log(username);\n    console.log(date);\n    if (source == destination) {\n      setError(true);\n      setErrorText(\"Source and Destination Should be different cities\");\n      return;\n    } else {\n      setError(false);\n      setErrorText(\"\");\n    }\n\n    const priv = true;\n    //const username = 'Elon Musk';\n    const myArray = [\"women\", \"men\"];\n    const img_gender = myArray[Math.floor(Math.random() * myArray.length)];\n    const img_index = Math.floor(Math.random() * 100) + 1;\n    const img_url =\n      \"https://randomuser.me/api/portraits/\" +\n      img_gender +\n      \"/\" +\n      img_index.toString() +\n      \".jpg\";\n\n    postTweet(username, source, destination, date, img_url);\n    // alert(\"Booking Done!\");\n  }\n  function formatDate(date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [year, month, day].join(\"-\");\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <div className={classes.container}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {\"Book Bus\"}\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit}>\n            <TextField\n              error={errorusername}\n              value={username}\n              onInput={handleUsername}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label={\"User Name\"}\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              helperText={helperuser}\n            />\n            <div style={{ display: \"inline\", float: \"left\" }}>\n              <div\n                style={{\n                  display: \"inline\",\n                  float: \"left\",\n                  paddingLeft: \"100px\",\n                }}\n              >\n                <FormControl\n                  className={classes.formControl}\n                  error={errorsource}\n                >\n                  <InputLabel id=\"demo-simple-select-helper-label\">\n                    Source City\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-helper-label\"\n                    id=\"demo-simple-select-helper\"\n                    value={source}\n                    onChange={handleSource}\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={\"New York\"}>New York</MenuItem>\n                    <MenuItem value={\"Boston\"}>Boston</MenuItem>\n                    <MenuItem value={\"Portland\"}>Portland</MenuItem>\n                  </Select>\n                  <FormHelperText>{helpersource}</FormHelperText>\n                </FormControl>\n              </div>\n              <div\n                style={{\n                  display: \"inline\",\n                  float: \"right\",\n                  paddingLeft: \"300px\",\n                }}\n              >\n                <FormControl\n                  className={classes.formControl}\n                  error={errordestination}\n                >\n                  <InputLabel id=\"demo-simple-select-helper-label\">\n                    Destination City\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-helper-label\"\n                    id=\"demo-simple-select-helper\"\n                    value={destination}\n                    onChange={handleDestination}\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={\"New York\"}>New York</MenuItem>\n                    <MenuItem value={\"Boston\"}>Boston</MenuItem>\n                    <MenuItem value={\"Portland\"}>Portland</MenuItem>\n                  </Select>\n                  <FormHelperText>{helperdestination}</FormHelperText>\n                </FormControl>\n              </div>\n            </div>\n            <br />\n            <br />\n            <br />\n            <br />\n            <div style={{ paddingLeft: \"240px\" }}>\n              <TextField\n                id=\"date\"\n                label=\"Date of Journey\"\n                type=\"date\"\n                onInput={(e) => setDate(e.target.value)}\n                defaultValue={date}\n                // className={classes.textField}\n                inputProps={{\n                  min: formatDate(new Date()),\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                required\n              />\n            </div>\n            {/* <TextField\n              value={tweet}\n              onInput={(e) => setTweet(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"tweet\"\n              label={\"Tweet\"}\n              name=\"tweet\"\n              autoComplete=\"tweet\"\n              autoFocus\n            /> */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {\"Submit\"}\n            </Button>\n          </form>\n          {error&&<FormHelperText error={error}>{errorText}</FormHelperText>}\n\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              width: \"100%\",\n              justifyContent: \"space-between\",\n            }}\n          ></div>\n        </div>\n      </Paper>\n    </React.Fragment>\n  );\n};\n\nexport default Compose;\n","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nconst PageNotFound = () =>{\n\treturn(\n\t\t<div>\n\t\t\t<h1>This Page does not exists.. go back to home</h1>\n\t\t\t<NavLink to=\"/\">Go Back</NavLink>\n\t\t</div>\n\t);\n};\n\nexport default PageNotFound;","import React from 'react';\nimport clsx from 'clsx';\nimport { Router, Route, Switch, Link} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Badge from '@material-ui/core/Badge';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport LayersIcon from '@material-ui/icons/Layers';\n\nimport config from '../config/config'\n\n// import your components:\n import Home from \"../pages/Home\";\nimport THome from \"../pages/Uber/AllBookings\";\nimport Compose from \"../pages/Booking/Booking\";\nimport PageNotFound from \"../pages/PageNotFound\";\n\nconst drawerWidth = 240;\nconst history = createBrowserHistory();\n\n// css\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  drawerPaperCollapsed: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(0),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(0),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  footer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    backgroundColor: 'grey',\n    color: 'white',\n    textAlign: 'center',\n    fontStyle: 'italic',\n  },\n}));\n\n//~dk\nconst isAuthorised = config.auth.isAuthenticated()\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [collapsed, setCollapsed] = React.useState(false);\n  const [title, setTitle] = React.useState('Uber Bus');\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n    setCollapsed(false);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n    setCollapsed(false);\n  };\n  const handleDrawerCollapsed = () => {\n    setCollapsed(true);\n    setOpen(false);\n  };\n  const onItemClick = title => () => {\n    setTitle(title);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      {/* This is the header AppBar */}\n      <AppBar style={{backgroundColor:'black'}} position=\"absolute\" className={clsx(classes.appBar, \n          open && classes.appBarShift, collapsed && classes.appBar)}>\n        <Toolbar title={title} className={classes.toolbar}>\n\n          {/* The Menu icon exposes the left pane menu bar */}\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          {/* The title is set by the components */}\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            {title}\n          </Typography>\n\n          {/* For kicks */}\n          {/* <IconButton color=\"inherit\">\n            <Badge badgeContent={2} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton> */}\n        </Toolbar>\n      </AppBar>\n\n      {/* The Router component routes URLs to your components */}\n      <Router history={history} title={title} >\n\n        {/* Drawers are left pane menu items in React-speak */}\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, \n              !open && classes.drawerPaperClose,\n              collapsed && classes.drawerPaperCollapsed)\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n\n            {/* This icon collapses the left pane enough to show menu item icons */}\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n\n          {/* Left pane menu items */}\n          <List>\n\n            {/* Tweets menu item*/}\n            <ListItem button component={Link} to=\"/listbooks\" onClick={onItemClick('All Bookings')}>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"List Bookings\" />\n              { title === 'All Bookings' && \n                <ListItemIcon>\n                  <IconButton onClick={handleDrawerCollapsed}>\n                    <ChevronLeftIcon />\n                  </IconButton>\n                </ListItemIcon>\n              }\n            </ListItem>\n\n            {/* Compose menu item*/}\n            <ListItem button component={Link} to=\"/book\" onClick={onItemClick('Bookings')}>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Book Bus\" />\n              { title === 'Bookings' && \n                <ListItemIcon>\n                  <IconButton onClick={handleDrawerCollapsed}>\n                    <ChevronLeftIcon />\n                  </IconButton>\n                </ListItemIcon>\n              }\n            </ListItem>\n\n            {/* SignUp menu item */}\n            {/* <ListItem button component={Link} to=\"/signin\" onClick={onItemClick('Sign In')}>\n              <ListItemIcon>\n                <LayersIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Sign In\" />\n              { title === 'Sign In' && \n                <ListItemIcon>\n                  <IconButton onClick={handleDrawerCollapsed}>\n                    <ChevronLeftIcon />\n                  </IconButton>\n                </ListItemIcon>\n              }\n            </ListItem> */}\n          </List>\n        </Drawer>\n        \n        {/* This is your mission control: Matches URLs above to your components */}\n        <main className={classes.content}>\n\n          {/* menu paths */}\n          <Switch>\n          <Route exact path=\"/\" component={Home} /> \n          <Route path=\"/listbooks\" component={THome} />\n          <Route path=\"/book\" component={Compose} />\n          <Route component={PageNotFound} />\n          </Switch>\n          \n          {/* <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/password_reset\" component={PasswordReset} />\n          <Route path=\"/password_change\" component={PasswordChange} /> */}\n          {/* <Route path=\"/activity\"><ActivityHome /></Route> */}\n        </main>\n        \n      </Router>\n      \n      {/* Whatever you put here will appear on all your pages, style appropriately! */}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Appbar from './components/Appbar.js';\nimport './App.css';\nimport _config from './config'\n\n// routing: https://reactrouter.com/web/api/Hooks\n// a2hs: https://dev.to/zvakh/a2hs-how-to-add-the-pwa-to-home-screen-27c4\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Appbar config={_config} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App; \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}